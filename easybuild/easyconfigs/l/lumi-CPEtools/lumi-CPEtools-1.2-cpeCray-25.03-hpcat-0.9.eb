easyblock = 'Bundle'

local_CPEtools_version =      '1.2'
local_hpcat_version =         '0.9'    # https://github.com/HewlettPackard/hpcat/tags
local_hpcat_hwloc_version =   '2.11.2' # Version reverse engineered from the tag used in the hpcat submodules directory
local_hpcat_libfort_version = '0.4.2'  # Version reverse engineered from the tag used in the hpcat submodules directory

name =          'lumi-CPEtools'
version =       f'{local_CPEtools_version}'
versionsuffix = f'-hpcat-{local_hpcat_version}'

homepage = 'https://www.lumi-supercomputer.eu'

whatis = [
    'Description: Various programs to experiment with starting processes and core affinity and analyse executables.',
]

description = """
The LUMI-CPEtools module provides various programs to experiment with starting
applications of various types and with core affinity and to show which Cray PE
libraries are used by an executable. It may be enhanced with additional 
features in the future.

Sources for all but hpcat can be accessed after loading the module in the 
directory $EBROOTLUMIMINCPETOOLS/src.
"""

docurls = [
    "Man pages, start with man lumi-CPEtools",
    "hpcat: See https://github.com/HewlettPackard/hpcat",
]

toolchain = {'name': 'cpeCray', 'version': '25.03'}
# Note: The Makefile is designed to work with the compiler variables as defined
# when usempi and openmp are both false, as the module contains code with and
# without MPI or OpenMP support, though it would probably still work if these
# are set to true as usually it does no harm to compile with the MPI wrappers
# or OpenMP options enabled even if the sources don't use these.
toolchainopts = {'usempi': False,'openmp': False}

builddependencies = [
    ('buildtools', '%(toolchain_version)s', '', SYSTEM), # For make
]

import os as local_os
local_partition = local_os.getenv('LUMI_STACK_PARTITION')

start_dir = 'src'

#
# Options for lumi-CPEtools
#
local_CPEtools_buildopts  = 'CC=cc MPICC=cc CFLAGS="-O2" OMPFLAG="-fopenmp" CXX=CC MPICXX=CC CXXFLAGS="-O2" '
local_CPEtools_buildopts += 'DEFINES="-D_GNU_SOURCE=" ROCMDEFINES="-D__HIP_PLATFORM_AMD__" '
local_CPEtools_buildopts += 'LIBS="" ROCMLIBS="-L${ROCM_PATH}/lib -lamdhip64" '

if local_partition == 'G':
    local_CPEtools_buildopts += 'exe_cpu exe_gpu'
else:
    local_CPEtools_buildopts += 'exe_cpu'

#
# Options for hpcat
#   
local_hpcat_prebuildopts = ''
if local_partition == 'G':
    local_hpcat_prebuildopts += 'module unload craype-accel-amd-gfx90a && '

default_easyblock = 'MakeCp'

components = [ 
    ('lumi-CPEtools', local_CPEtools_version, {
        'easyblock':     'MakeCp',
        'sources':       [{ # https://github.com/Lumi-supercomputer/lumi-CPEtools/archive/refs/tags/1.2.tar.gz
                           'download_filename': f'{local_CPEtools_version}.tar.gz',
                           'filename':          f'lumi-CPEtools-{local_CPEtools_version}.tar.gz',
                           'source_urls':       ['https://github.com/Lumi-supercomputer/%(name)s/archive/refs/tags']
                         }],
        'checksums':     [{ f'lumi-CPEtools-{local_CPEtools_version}.tar.gz': '89e1a01d9ecd30da53c70d866aa4a2d60853e16b2cc2da4b23589742f8d84e86' }],
        'start_dir':     '%(name)s-%(version)s',
        'prebuildopts':  'cd src && ', # Cannot do this via start_dir as otherwise the bin etc directories are not found in the copy step. 
        'buildopts':     local_CPEtools_buildopts,
        'files_to_copy': [ 'bin', 'man', 'src', 'README.md', (['LICENSE'], 'share/licenses/lumi-CPEtools') ],
        }),    
    ( 'hpcat', local_hpcat_version, {
        'easyblock':     'ConfigureMake',
        'sources':       [{ # HPCAT 0.4: https://github.com/HewlettPackard/hpcat/archive/refs/tags/v0.4.tar.gz
                           'download_filename': f'v{local_hpcat_version}.tar.gz',
                           'filename':          f'hpcat-{local_hpcat_version}.tar.gz',
                           'source_urls':       ['https://github.com/HewlettPackard/hpcat/archive/refs/tags']
                         },{ # hwloc 2.11.2: https://github.com/open-mpi/hwloc/archive/refs/tags/hwloc-2.11.2.tar.gz
                           'filename':          f'hwloc-{local_hpcat_hwloc_version}.tar.gz',
                           'source_urls':       ['https://github.com/open-mpi/hwloc/archive/refs/tags'],
                           'extract_cmd':       f'cd %(name)s-%(version)s/submodules && tar xvf %s && /bin/rm -rf hwloc && /bin/mv hwloc-hwloc-{local_hpcat_hwloc_version} hwloc',
                         },{ # libfort 0.4.2: https://github.com/seleznevae/libfort/archive/refs/tags/v0.4.2.tar.gz
                           'download_filename': f'v{local_hpcat_libfort_version}.tar.gz',
                           'filename':          f'libfort-{local_hpcat_libfort_version}.tar.gz',
                           'source_urls':       ['https://github.com/seleznevae/libfort/archive/refs/tags'],
                           'extract_cmd':       f'cd %(name)s-%(version)s/submodules && tar xvf %s && /bin/rm -rf libfort && /bin/mv libfort-{local_hpcat_libfort_version} libfort',
                         }],
        'checksums':     [
                           { f'hpcat-{local_hpcat_version}.tar.gz':           '8f65dcde02709d9351de1bcd2ef89d13794f48ca8d3ec1acf266cbae57dcdab6' },
                           { f'hwloc-{local_hpcat_hwloc_version}.tar.gz':     'a9cd3505db8f44d14aba17652d183c7180f01755c02b1b2c4f3950bd7ff5b5d3' },
                           { f'libfort-{local_hpcat_libfort_version}.tar.gz': '8f7b03f1aa526e50c9828f09490f3c844b73d5f9ca72493fe81931746f75e489' },
                         ],
        'start_dir':     '%(name)s-%(version)s',
        'preconfigopts': 'CFLAGS="$CFLAGS -I/opt/rocm/include"', # Work around an issue where for some reason CMake fails to add the correct path to the include files.
        'prebuildopts':  local_hpcat_prebuildopts, 
        'installopts':   '&& mkdir -p %(installdir)s/share/licenses/hpcat && cp LICENSE README.md %(installdir)s/share/licenses/hpcat',
        })
]

#
# Sanity checks
#

local_exe = [ 'serial_check', 'omp_check', 'mpi_check', 'hybrid_check', 'xldd', 'hpcat' ] 
if local_partition == 'G': 
    local_exe += [ 'gpu_check', 'hpcat.so' ]

local_files = [ 'share/licenses/lumi-CPEtools/LICENSE', 'share/licenses/hpcat/LICENSE' ]
if local_partition == 'G':
    local_files += [ 'lib/libhpcathip.so' ]

sanity_check_paths = {
    'files': [ 'bin/%s' % x for x in [ 'serial_check', 'omp_check', 'mpi_check', 'hybrid_check', 'xldd' ] ] +
             local_files,
    'dirs':  [ 'man/man1', 'src' ]
}

sanity_check_commands = [
    'xldd --help',
    'serial_check',
    'OMP_NUM_THREADS=4 omp_check',
    'mpi_check',
    'OMP_NUM_THREADS=4 hybrid_check',
    'hpcat --version',
]
if local_partition == 'G': 
    sanity_check_commands += [ 'gpu_check -h' ]

moduleclass = 'devel'
