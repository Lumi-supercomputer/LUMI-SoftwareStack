#DOC cotainr update for CrayEnv optimised for the state of LUMI after the September 2024 system maintenance.
#DOC
#DOC [Online documentation for this version of cotainr](https://cotainr.readthedocs.io/en/2024.10.0/)
easyblock = 'Tarball'

local_craypython_version =  '3.11.7'

name =          'cotainr'
version =       '2024.10.0'
versionsuffix = f'-cray-python-{local_craypython_version}'

homepage = 'https://github.com/DeiC-HPC/container-builder'

whatis = [
    'Description: cotainr is a tool that helps making Singularity/Apptainer containers.'
]
description = """"
cotainr is a tool that helps making Singularity/Apptainer containers.
It runs entirely in user space, i.e. you donâ€™t need root/sudo priviledges 
(or fake them) to use cotainr. It makes it a lot easier to build 
Singularity/Apptainer containers for certain HPC use cases.

In order to achieve this, the scope of cotainr is deliberately limited - focus 
is on making it easy to build reasonably performant containers for common HPC 
use cases. If you need a general purpose solution for building containers that 
achieve the absolute maximum performance, you should stick with 
Apptainer/Singularity instead of cotainr.

The software is provided by LUMI consortium partner DeiC.

Note that this software requires a more recent Python then the system Python
provided by the SUSE OS on LUMI. This module will load whatever version of
cray-python is the default when the module is loaded.

The following base images are available:
-   lumi-c: Base image for LUMI-C based on Ubuntu 22.04
-   lumi-g: Base image based on the ROCm container version 6.0.3 provided by
    LUST in /appl/local/containers/sif-images
"""

docurls = [
    f'Web-based documentation on https://cotainr.readthedocs.io/en/{version}/'
]

sources = [ {
  'filename':          '%(name)s-%(version)s.tar.gz',
  'download_filename': '%(version)s.tar.gz',
  'source_urls':       ['https://github.com/DeiC-HPC/cotainr/archive/refs/tags'],
} ]

toolchain = SYSTEM

dependencies = [
    ('cray-python/' + local_craypython_version, EXTERNAL_MODULE),
]

local_systems = """{
  "lumi-g": {
    "base-image": "/appl/local/containers/sif-images/lumi-rocm-rocm-6.0.3.sif"
  },
  "lumi-c": {
    "base-image": "docker://ubuntu:22.04"
  }
}"""

postinstallcmds = [ # Use a bash HERE document to create the systems.json file.
    'cd %(installdir)s/ ; cat >systems.json <<EOF\n' + local_systems + '\nEOF\n'
]

sanity_check_paths = {
    'files': ['bin/cotainr', 'systems.json'],
    'dirs':  ['cotainr'],
}

sanity_check_commands = [
    'cotainr --help',
    'cotainr --version',
    'cotainr info',
]

moduleclass = "tools"
