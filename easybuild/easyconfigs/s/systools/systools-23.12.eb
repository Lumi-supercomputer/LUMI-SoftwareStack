easyblock = 'Bundle'

local_LUMI_version =        '23.12'

name =     'systools'
version =  local_LUMI_version

homepage = '(none)'

whatis = [
    "Description: A number of small and popular tools that just make life easier.",
    "Contains: gpp, htop, tree",
]

local_systools_GPP_version =          '2.28'
local_systools_htop_version =         '3.3.0'
local_systools_libtree_version =      '3.1.1'
local_systools_tree_version =         '2.1.1'

description = f"""
This module provides a number of popular tools to view and manage Linux processes
or files or to process files.

Overview of included tools:

  + gpp (version {local_systools_GPP_version}: a general-purpose preprocessor with customizable syntax, suitable for a
    wide range of preprocessing tasks. Its independence from any one programming
    language makes it much more versatile than the C preprocessor (cpp), while its
    syntax is lighter and more flexible than that of GNU m4. There are built-in
    macros for use with C/C++, LaTeX, HTML, XHTML, and Prolog files.

    GPP is Free Software. It is distributed under the terms of the GNU Lesser
    General Public Licence.

  + htop (version {local_systools_htop_version}): an interactive process viewer for Unix/Linux.

    Note that by default, htop will not show the load of individual cores as you may be used from
    many other sites. However, given that there are 256 virtual cores on most nodes, this produces
    visual overload for may. It is still possible to change the settings in htop by going into the
    settings screen using "SHFIT-S" and then changing the meters, e.g., adding
    "CPUS (1-4/8): first half in 4 shorter columns" to the first half and
    "CPUS (5-8/8): second half in 4 shorter columns" to the second.

    This configuration will be stored in ~/.config/htop/htoprc, so you can also copy settings
    from another user by exchanging that file.
    
  + libtree (version {local_systools_libtree_version}) is a tool that turns ldd into a tree, explains why
    shared libraries are found and why not and optionally deploys executables and
    dependencies into a single directory.

  + tree (version {local_systools_tree_version}): a recursive directory listing command that produces a depth indented
    listing of files, which is colorized ala dircolors if the LS_COLORS environment
    variable is set and output is to tty.
"""

docurls = [
    'GPP:  Web-based documentation on: https://files.nothingisreal.com/software/gpp/gpp.html',
    'GPP:  Mal page in section 1 (man 1 gpp)',
    'htop: Man page in section 1 (man 1 htop)',
    'libtree: Man page in section 1 (man 1 libtree)',
    'tree: Man page in section 1 (man 1 tree)',
]

toolchain = SYSTEM

dependencies = [
    ('buildtools', local_LUMI_version),
    ('syslibs',    local_LUMI_version, '-static'), # for libreadline
]


default_easyblock = 'ConfigureMake'

components = [
    ('GPP', local_systools_GPP_version, {
        'sources':       [ {
                            'filename':    SOURCELOWER_TAR_BZ2,
                            'source_urls': ['https://github.com/logological/gpp/releases/download/%(version)s']
                         }],
        'checksums':     ['343d33d562e2492ca9b51ff2cc4b06968a17a85fdc59d5d4e78eed3b1d854b70'],
        'start_dir':     'gpp-%(version)s',
        'preconfigopts': 'CFLAGS="-O2 -march=znver1" CXXFLAGS="-O2 -march=znver1" ',
        'installopts':   ' && mkdir -p %(installdir)s/share/licenses/%(name)s' +
                         ' && cp COPYING COPYING.LESSER NEWS THANKS %(installdir)s/share/licenses/%(name)s'
    }),
    ('htop', local_systools_htop_version, {
        'sources':       [ {
                            'download_filename': '%(version)s.tar.gz',
                            'filename':          SOURCE_TAR_GZ,
                            'source_urls':       ['https://github.com/htop-dev/htop/archive/refs/tags']
                         }],
        'checksums':     ['1e5cc328eee2bd1acff89f860e3179ea24b85df3ac483433f92a29977b14b045'],
        'start_dir':     'htop-%(version)s',
        'preconfigopts': './autogen.sh && LDFLAGS="-L$EBROOTSYSLIBS/lib" LIBS="$LIBS -ltinfo" CFLAGS="-O2 -march=znver1" CXXFLAGS="-O2 -march=znver1" ',
        # Core dumps when compiled with unicode support, there must be something wrong in
        # our ncursesw library.
        'configopts':    '--disable-unicode',
        'installopts':   ' && mkdir -p %(installdir)s/share/licenses/%(name)s' +
                         ' && cp COPYING %(installdir)s/share/licenses/%(name)s'
    }),
    ('libtree', local_systools_libtree_version, {
        'easyblock':     'MakeCp',
        'sources':       [ { # https://github.com/haampie/libtree/archive/refs/tags/v3.1.1.tar.gz
                            'download_filename': 'v%(version)s.tar.gz',
                            'filename':          '%(name)s-%(version)s.tar.gz',
                            'source_urls':       ['https://github.com/haampie/libtree/archive/refs/tags']
                         }],
        'checksums':     ['6148436f54296945d22420254dd78e1829d60124bb2f5b9881320a6550f73f5c'],
        'start_dir':     'libtree-%(version)s',
        'buildopts':     'CC="gcc" CFLAGS="-O2 -march=znver1" LDFLAGS="-static"',
        'files_to_copy': [(['libtree'], 'bin'), (['doc/libtree.1'], 'share/man/man1'), (['LICENSE'], 'share/licenses/%(name)s')]
    }),
    ('tree', local_systools_tree_version, {
        'easyblock':     'MakeCp',
        'sources':       [ { # http://mama.indstate.edu/users/ice/tree/src/tree-1.8.0.tgz
                            'filename':    '%(name)s-%(version)s.tgz',
                            'source_urls': ['http://mama.indstate.edu/users/ice/tree/src']
                         }],
        'checksums':     ['d3c3d55f403af7c76556546325aa1eca90b918cbaaf6d3ab60a49d8367ab90d5'],
        'start_dir':     'tree-%(version)s',
        'buildopts':     'CC="gcc" CFLAGS="-O2 -march=znver1 -ggdb -pedantic -Wall -DLINUX -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64"',
        'files_to_copy': [(['tree'], 'bin'), (['doc/tree.1'], 'share/man/man1'), (['LICENSE'], 'share/licenses/%(name)s')]
    }),
]

sanity_check_paths = {
    'files': ['bin/gpp', 'share/man/man1/gpp.1', 'share/licenses/GPP/COPYING', 'share/licenses/GPP/COPYING.LESSER'] +
             ['bin/htop', 'share/man/man1/htop.1', 'share/licenses/htop/COPYING'] +
             ['bin/libtree', 'share/man/man1/libtree.1', 'share/licenses/libtree/LICENSE'] +
             ['bin/tree', 'share/man/man1/tree.1', 'share/licenses/tree/LICENSE'],
    'dirs':  []
}

sanity_check_commands = [
    'gpp --version',
    'htop --version',
    'libtree --help',
    'libtree -v -p %(installdir)s/bin/libtree',
    'tree --version'
]

modluafooter = f"""
extensions( "GPP/{local_systools_GPP_version}, htop/{local_systools_htop_version}, libtree/{local_systools_libtree_version}, tree/{local_systools_tree_version}" )
"""

moduleclass = 'tools'
