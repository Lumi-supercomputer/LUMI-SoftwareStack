# Contributed by Luca Marsella (CSCS)
# Adapted by Kurt Lust (kurt.lust@uantwerpen.be) for the LUMI consortium
#
# This file is an EasyBuild reciPY as per https://github.com/hpcugent/easybuild
#
# Copyright:: Copyright 2012-2014 Uni.Lu/LCSB, NTUA
# Authors::   Fotis Georgatos <fotis@cern.ch>
# License::   MIT/GPL
# $Id$
#
# This work implements a part of the HPCBIOS project and is a component of the policy:
# http://hpcbios.readthedocs.org/en/latest/
easyblock = 'ConfigureMake'

local_libreadline_version =  '8.2.13'        # https://ftp.gnu.org/pub/gnu/readline/, also look at the patches
local_Tcl_version =          '8.6.16'        # https://tcl.tk/

local_SQLite_version =       '3.47.2'        # https://www.sqlite.org/

name =    'SQLite'
version = local_SQLite_version

homepage = 'http://www.sqlite.org/'

whatis = [
    'Description: SQLite: SQL Database Engine in a C Library'
]
description = """
SQLite is a C-language library that implements a small, fast, self-contained,
high-reliability, full-featured, SQL database engine. SQLite is the most used
database engine in the world. SQLite is built into all mobile phones and most
computers and comes bundled inside countless other applications that people
use every day. More Information...

The SQLite file format is stable, cross-platform, and backwards compatible and
the developers pledge to keep it that way through the year 2050. SQLite database f
iles are commonly used as containers to transfer rich content between systems
and as a long-term archival format for data. There are over 1 trillion (1e12)
SQLite databases in active use.

SQLite source code is in the public-domain and is free to everyone to use for
any purpose.
"""

software_license_urls = [
    'https://www.sqlite.org/copyright.html',
]

toolchain = {'name': 'cpeAMD', 'version': '25.03'}
toolchainopts = {'pic': True}

# https://www.sqlite.org/2021/sqlite-autoconf-3350500.tar.gz
local_filename_version = '%1d%02d%02d00' % (int(version.split('.')[0]), int(version.split('.')[1]), int(version.split('.')[2]))
source_urls = ['https://www.sqlite.org/2024/']
sources =     ['%%(namelower)s-autoconf-%s.tar.gz' % (local_filename_version)]
checksums =   ['f1b2ee412c28d7472bc95ba996368d6f0cdcf00362affdadb27ed286c179540b']

builddependencies = [ # Create a reproducible build environment.
    ('buildtools',   '%(toolchain_version)s',   '', True),
]

# No license information in the distribution, so can't copy that.

dependencies = [
    ('libreadline', local_libreadline_version),
    ('Tcl',         local_Tcl_version),
]

# Doesn't need MPI, ROCm or BLAS, and module unload never fails so this is safe.
preconfigopts = 'module unload cray-libsci cray-mpich rocm xpmem && '
prebuildopts = preconfigopts

# enable additional APIs that provide access to meta-data about tables and queries
# needed for GDAL when it used as a dep for QGIS
buildopts = 'CC="$CC" CFLAGS="$CFLAGS -DSQLITE_ENABLE_COLUMN_METADATA"'

#parallel = 1

sanity_check_paths = {
    'files': ['bin/sqlite3', 'include/sqlite3ext.h', 'include/sqlite3.h',
              'lib/libsqlite3.a', 'lib/libsqlite3.%s' % SHLIB_EXT],
    'dirs':  ['lib/pkgconfig'],
}

sanity_check_commands = [
    'sqlite3 --version | grep ^%(version)s',
]

moduleclass = 'devel'
