easyblock = 'ConfigureMake'

local_ncurses_version =      '6.2'           # https://ftp.gnu.org/pub/gnu/ncurses/
local_libreadline_version =  '8.1'           # https://ftp.gnu.org/pub/gnu/readline/
local_zlib_version =         '1.2.11'        # https://zlib.net/
local_libxslt_version =      '1.1.34'        # http://xmlsoft.org/sources/
local_gettext_version =      '0.21'          # https://ftp.gnu.org/pub/gnu/gettext/
local_file_version =         '5.40'          # ftp://ftp.astron.com/pub/file/
local_util_version =         '2.37.1'        # https://mirrors.edge.kernel.org/pub/linux/utils/util-linux/

name =    'util-linux'
version = local_util_version

homepage = 'http://www.kernel.org/pub/linux/utils/util-linux'

whatis = [
   'Description: A number of libraries and linux utilities used by Glib'
]

description = """
A set of Linux utilities and libraries used by Glib. Many of the commands
are standard on Linux systems.
"""

toolchain = {'name': 'cpeGNU', 'version': '21.08'}
toolchainopts = {'pic': True}

source_urls = ['%s/v%%(version_major_minor)s' % homepage]
sources =     [SOURCELOWER_TAR_XZ]
checksums =   ['8e4bd42053b726cf86eb4d13a73bc1d9225a2c2e1a2e0d2a891f1020f83e6b76']

builddependencies = [ # Create a reproducible build environment.
    ('buildtools', '%(toolchain_version)s', '', True),
]

dependencies = [
    ('ncurses',     local_ncurses_version),
    ('libreadline', local_libreadline_version),
    ('zlib',        local_zlib_version),
    ('libxslt',     local_libxslt_version),  # Not clear if this is a true dependency or only a build dependency, but configure looks for it.
    ('gettext',     local_gettext_version),
    ('file',        local_file_version,),    # For libmagic.
]

# disable account related utilities (they need OS dependent pam-devel files)
# disable wall and friends (requires group changing permissions for install user)
# install systemd service files in install dir
# install bash completion files in install dir
configopts  = "--disable-chfn-chsh --disable-login --disable-su --disable-rfkill "
configopts += "--disable-wall --disable-use-tty-group "
configopts += "--disable-makeinstall-chown --disable-makeinstall-setuid "
configopts += "--with-systemdsystemunitdir='${prefix}/systemd' "
configopts += "--with-bashcompletiondir='${prefix}/share/bash-completion/completions' "
# disable building Python bindings (since we don't include Python as a dep)
configopts += "--without-python "
# We need to leave out tinfo as it doesn't seem to find the library, leading
# to a failure to find cur_term.
configopts += "--without-tinfo "

sanity_check_paths = {
    'files': ['lib/lib%s.a' % x for x in ['blkid', 'mount', 'uuid']],
    'dirs':  ['include', 'bin', 'share', 'sbin'],
}

sanity_check_commands = [
    'cal --version',
    'chmem --version',
    'choom --version',
    'chrt --version',
    'col --version',
    'colcrt --version',
    'colrm --version',
    'column --version',
    'dmesg --version',
    'eject --version',
    'fallocate --version',
    'fincore --version',
    'findmnt --version',
    'flock --version',
    'getopt --version',
    'hardlink --version',
    'hexdump --version',
    'ionice --version',
    'ipcmk --version',
    'ipcrm --version',
    'ipcs --version',
    'irqtop --version',
    'isosize --version',
    'last --version',
    'logger --version',
    'look --version',
    'lsblk --version',
    'lscpu --version',
    'lsipc --version',
    'lsirq --version',
    'lslocks --version',
    'lslogins --version',
    'lsmem --version',
    'lsns --version',
    'mcookie --version',
    'mesg --version',
    'more --version',
    'mount --version',
    'mountpoint --version',
    'namei --version',
    'nsenter --version',
    'prlimit --version',
    'rename --version',
    'renice --version',
    'rev --version',
    'script --version',
    'scriptlive --version',
    'scriptreplay --version',
    'setarch --version',
    'setsid --version',
    'setterm --version',
    'taskset --version',
    'uclampset --version',
    'ul --version',
    'umount --version',
    'unshare --version',
    'utmpdump --version',
    'uuidgen --version',
    'uuidparse --version',
    'wdctl --version',
    'whereis --version',
]

moduleclass = 'tools'
