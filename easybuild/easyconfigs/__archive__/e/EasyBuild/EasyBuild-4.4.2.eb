#DOC This is the version of EasyBuild used for the 21.08 software stack.
easyblock = 'EB_EasyBuildMeta'

name =    'EasyBuild'
version = '4.4.2'

homepage = 'https://easybuilders.github.io/easybuild'

whatis = [
    "Description: EasyBuild is a software build and installation framework written in Python that allows you to install software in a structured, repeatable and robust way."
]

description = """
EasyBuild is a software build and installation framework
written in Python that allows you to install software in a structured,
repeatable and robust way.
"""

usage = """
See the documentation on readthedocs. Only the documentation of the latest
version is readily available.

The EasyBuild module on LUMI should be used through the EasyBuild-user or
EasyBuild-production modules. These modules ensure that EasyBuild is properly
configured to install software on LUMI.
  * Installing software that is common to all partitions: First load the
    appropriate LUMI software stack module and the hidden partition/common module
    and then load either EasyBuild-user or EasyBuild-production (the latter for
    system managers only) module.
  * Installing software for a specific partition works in the same way, but then
    by loading the appropriate partition module. It is best to compile software on
    a node of that partition as cross-compiling may not always work as some packages
    have the nasty habit to add compiler options that conflict with the requirements
    of cross-compiling.
"""

docurls = [
    "Web-based documentation on https://easybuild.readthedocs.io/"
]

toolchain = SYSTEM

source_urls = [
    # easybuild-framework
    'https://files.pythonhosted.org/packages/3f/b3/00819590aae375c96f0acc0526163fe0422be0feec2ed04dc6722d0f0559/',
    # easybuild-easyblocks
    'https://files.pythonhosted.org/packages/6e/bf/c29680ac2d2364955e71096f9732b2bc40647d0c1d7ab9c262a35efd9a1d/',
    # easybuild-easyconfigs
    'https://files.pythonhosted.org/packages/6c/d9/960d38512f3b921b06ae8c41def16930044a1f9d8732dcb9aa311438469f/',
]
sources = [
    'easybuild-framework-%(version)s.tar.gz',
    'easybuild-easyblocks-%(version)s.tar.gz',
    'easybuild-easyconfigs-%(version)s.tar.gz',
]
patches = [
    'EasyBuild-4.4.2_keyring_DBus.patch',
]
checksums = [
    '1e6580f210bc742ee1518d0a85389b32199b692de80548c80e93fa2a1a32dd01',  # easybuild-framework-4.4.2.tar.gz
    '4918f13ffcd97c8b9eb0a10517bdc5b28f67c3602882d4be0bee3afc401fd78c',  # easybuild-easyblocks-4.4.2.tar.gz
    '6ec2fa4d9116d45298318f31292726b6f6d1257580cff82138904c69ab38bc46',  # easybuild-easyconfigs-4.4.2.tar.gz
    'd823213811e610fae568dbb0d010b4460f75e23902ed56dddca892f3dc0c9976',  # EasyBuild-4.4.2_keyring_DBus.patch
]

# order matters a lot, to avoid having dependencies auto-resolved (--no-deps easy_install option doesn't work?)
# EasyBuild is a (set of) Python packages, so it depends on Python
# usually, we want to use the system Python, so no actual Python dependency is listed
allow_system_deps = [('Python', SYS_PYTHON_VERSION)]

local_pyshortver = '.'.join(SYS_PYTHON_VERSION.split('.')[:2])

sanity_check_paths = {
    'files': ['bin/eb'],
    'dirs':  ['lib/python%s/site-packages' % local_pyshortver],
}

# Set Python 3 for EasyBuild
modextravars = {
    'EB_PYTHON': 'python3',
}

moduleclass = 'tools'
