# Note that GLib is really made to be compiled with GCC and nothing else
# due to the use of compiler-specific pragma, so you may get warnings
# about unrecognizded pragmas when compiling with another compiler.
easyblock = 'MesonNinja'

local_gettext_version =      '0.24'          # https://ftp.gnu.org/pub/gnu/gettext/
local_libffi_version =       '3.4.5'         # https://sourceware.org/libffi/
local_libxml2_version =      '2.13.4'        # http://xmlsoft.org/sources/
local_PCRE2_version =        '10.45'         # https://github.com/PCRE2Project/pcre2/releases  # Not yet in EB 2025a when checked for installation
local_util_version =         '2.40.4'        # https://mirrors.edge.kernel.org/pub/linux/utils/util-linux/ (Not yet in EB 2025a when checking)

local_GLib_version =         '2.81.2'        # https://ftp.gnome.org/pub/GNOME/sources/glib/ Not the one from 2025a, but with newer versions we had trouble with GObject-Introspection

local_craypython_version =   '3.11.7'
local_craypython_maj_min = '.'.join( local_craypython_version.split('.')[:2] )

name =    'GLib'
version = local_GLib_version

homepage = 'http://www.gtk.org/'

whatis = [
    'Description: One of the GTK+ base libraries',
    'The module provides a number of command line utilities and static and shared libraries',
]

description = """
GLib provides the core application building blocks for libraries and
applications written in C. It provides the core object system used in GNOME,
the main loop implementation, and a large set of utility functions for strings
and common data structures.

The module provides a number of command line utilities and staqtic and shared
libraries.
"""

docurls= [
    'Web-based documentation: https://developer.gnome.org/glib/',
]

docpaths = [
    'share/gtk-doc/html/glib',
    'share/gtk-doc/html/gobject',
    'share/gtk-doc/html/gio'
]

software_license_urls = [
    'https://www.gnu.org/licenses/old-licenses/lgpl-2.0.html',
]

toolchain = {'name': 'cpeCray', 'version': '25.03'}
toolchainopts = {'pic': True, 'extra_cflags': '-Wno-unsupported-target-opt'}

# Check on https://ftp.gnome.org/pub/GNOME/sources/glib/
source_urls = [FTPGNOME_SOURCE]
sources =     [SOURCELOWER_TAR_XZ]
checksums =   ['ce84b241b84750a3d42c78c456976fac57f2d2726a110f2ba059c052a4349d1c']

builddependencies = [
    # Python is required for building against GLib, at least when
    # gdbus-codegen or one of the other python scripts are used.
    # Since Meson 0.50 and later are Python >=3.5 only we can't build
    # Python specific versions of GLib that uses Python 2.x
    # thus Python should not be a runtime dependency for GLib.
    # Packages that use GLib should either have an explicit
    # (build)dependency on Python or it will use the system version
    # EasyBuild itself uses.
    ('buildtools' ,       '%(toolchain_version)s', '',                                        SYSTEM),
    ('buildtools-python', '%(toolchain_version)s', f'-cray-python{local_craypython_maj_min}', SYSTEM),
]

dependencies = [
    ('libffi',     local_libffi_version),
    ('gettext',    local_gettext_version),
    ('libxml2',    local_libxml2_version),
    ('PCRE2',      local_PCRE2_version),
    ('util-linux', local_util_version),
]

# Doesn't need MPI, ROCm or BLAS, and module unload never fails so this is safe.
preconfigopts = 'module unload cray-libsci cray-mpich rocm xpmem && '
preinstallopts = pretestopts = prebuildopts = preconfigopts

# avoid using hardcoded path to Python binary in build step
preconfigopts += "export PYTHON=python3 && "

configopts  = "--buildtype=release --default-library=both "

#parallel = 1 # For debugging

#postinstallcmds = ["sed -i -e 's|#!.*python[0-9.]*$|#!/usr/bin/env python|' %(installdir)s/bin/*"]
fix_python_shebang_for = ['bin/*']

postinstallcmds = [
    'mkdir -p %(installdir)s/share/licenses/%(name)s',
    'cd %(start_dir)s && cp LICENSES/LGPL-2.1-or-later.txt NEWS README.md SECURITY.md %(installdir)s/share/licenses/%(name)s',   
]

sanity_check_paths = {
    'files': ['lib/libglib-%(version_major)s.0.a', 'lib/libglib-%%(version_major)s.0.%s' % SHLIB_EXT,
              f'share/licenses/{name}/LGPL-2.1-or-later.txt'],
    'dirs':  ['bin', 'include'],
}

moduleclass = 'vis'
